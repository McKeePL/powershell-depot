function New-WDCmdlet {

<#
    .SYNOPSIS
    This cmdlet assists in the customization of a template for the creation of
	new cmdlets.

	.DESCRIPTION
    This cmdlet reads a separate file containing a cmdlet template and
	customizes based on the values passed to it.

	It will add extra standard content to the template if you specify that it
	is a VMware cmdlet with the '-VMware' switch.

	The final result will be saved to a file named in the form of
	"Verb-Noun.ps1"

	.NOTES
	The 'WD' prefix is a contraction of my GitHub username, Windos, and will
	be used for all of my general/personal cmdlets.

	As this is intended as a helper function for myself, the paths used are
	set to where I store the templates and want the output saved (the local
	clone of my GitHub repository). You can edit this to load/save files where
	it makes sense for you.

	Related files:

	cmdletTemplate.ps1
	vmwareTemplate.ps1

	.EXAMPLE
    New-WDCmdlet

	Creates a new cmdlet based entirly on a blank template, named
	"Get-Something"

	.EXAMPLE
    New-WDCmdlet Ping Universe -Synopsis 'Pings everything in the Universe'

	Creates a new cmdlet called "Ping-Universe" with a custom synopsis.
	Everything else is dictated by the tempalte.

	.EXAMPLE
    New-WDCmdlet Remove vCenter -VMware

	Creates a new cmdlet called "Remove-vCenter", which contains extra commands
    for VMware based cmdlets.

	.PARAMETER Verb
    Identifies the action that the cmdlet performs.

	Defaults to "Get."

	Valid input is determined by the 'Approved Verb' list generated by Get-Verb.

	.PARAMETER Noun
    Identifies the entity on which the action (identified by the verb) is
	performed.

	Defaults to "Something"

	If this parameter is specificed, value cannot be null or empty.

	.PARAMETER Synopsis
	A brief description of the cmdlet.

    If this parameter is specificed, value cannot be null or empty.

	.PARAMETER Description
	A detailed description of the cmdlet.

    If this parameter is specificed, value cannot be null or empty.

	.PARAMETER Notes
	Additional information about the cmdlet.

    If this parameter is specificed, value cannot be null or empty.

	.PARAMETER VMware
    Specifies that the generated cmdlet is to be used with VMware PowerCLI
	And injects VMware specific commands into the template.

	.PARAMETER Server
	Specifies the vSphere Server to be injected into the template. Only used in
	conjuntion with the '-VMware' switch.

    If this parameter is specificed, value cannot be null or empty.

	.LINK
	https://github.com/Windos/powershell-depot
#>

    [CmdletBinding(DefaultParameterSetName='Generic')]
    param
    (
        [Parameter(Mandatory=$false,
                   Position=0,
                   ParameterSetName='Generic')]
        [Parameter(Mandatory=$false,
                   Position=0,
                   ParameterSetName='VMware')]
	    [ValidateScript({(Get-Verb $_ | Measure-Object).Count -gt 0})]
        [string]$Verb='Get',

        [Parameter(Mandatory=$false,
                   Position=1,
                   ParameterSetName='Generic')]
        [Parameter(Mandatory=$false,
                   Position=1,
                   ParameterSetName='VMware')]
        [ValidateNotNullOrEmpty()]
		[string]$Noun='Something',

        [Parameter(Mandatory=$False,
                   ParameterSetName='VMware')]
        [switch]$VMware,

        [Parameter(Mandatory=$False,
                   ParameterSetName='VMware')]
        [ValidateNotNullOrEmpty()]
		[Alias('VIServer','vCenterServer')]
        [string]$Server='___VCENTER_SERVER___',

		[Parameter(Mandatory=$False,
                   ParameterSetName='Generic')]
        [Parameter(Mandatory=$false,
                   ParameterSetName='VMware')]
        [ValidateNotNullOrEmpty()]
		[string]$Synopsis='A brief description of the function or script.',

		[Parameter(Mandatory=$False,
                   ParameterSetName='Generic')]
        [Parameter(Mandatory=$false,
                   ParameterSetName='VMware')]
        [ValidateNotNullOrEmpty()]
		[string]$Description='A detailed description of the function or script.',

		[Parameter(Mandatory=$False,
                   ParameterSetName='Generic')]
        [Parameter(Mandatory=$false,
                   ParameterSetName='VMware')]
        [ValidateNotNullOrEmpty()]
		[string]$Notes='Additional information about the function or script.'
    )

    begin
	{
    }

    process
	{
        $cmdletTemplate = Get-Content -Path 'c:\github\powershell-depot\general\cmdletTemplate.ps1' -Raw

		$cmdletTemplate = $cmdletTemplate -replace '__VERB__', $verb
		$cmdletTemplate = $cmdletTemplate -replace '__NOUN__', $noun

		$cmdletTemplate = $cmdletTemplate -replace '__SYNOPSIS__', $synopsis
		$cmdletTemplate = $cmdletTemplate -replace '__DESCRIPTION__', "$description'"
		$cmdletTemplate = $cmdletTemplate -replace '__NOTES__', $notes

		if ($VMware)
		{
		    $vmwareTemplate = Get-Content -Path 'c:\github\powershell-depot\general\vmwareTemplate.ps1' -Raw
            $cmdletTemplate = $cmdletTemplate -replace '__VMWARE_BEGIN__', $vmwareTemplate
		}
        else
        {
            $cmdletTemplate = $cmdletTemplate -replace '__VMWARE_BEGIN__', ''
        }

		$cmdletTemplate = $cmdletTemplate -replace '___VCENTER_SERVER___', $server

		$cmdletTemplate | Out-File "c:\github\powershell-depot\general\$Verb-$Noun.ps1" -Encoding 'UTF8'
    }
}
